@model IEnumerable<ManagementCenter.Models.course>
@using System.Globalization;
@{
    ViewData["Title"] = "Khám phá Khóa học";
    // Lấy danh sách ID các khóa đã đăng ký từ ViewBag
    var registeredCourseIds = ViewBag.RegisteredCourseIds as HashSet<int> ?? new HashSet<int>();
    var registrationCounts = ViewBag.RegistrationCounts as Dictionary<int, int> ?? new Dictionary<int, int>();
}


<form asp-controller="InteractCourse" asp-action="AvailableCourses" method="get">
    @* Trỏ về đúng Action và dùng GET *@
    <div class="form-actions no-color mb-3">
        <p>
            Tìm kiếm:
            <input type="text" name="SearchString" value="@(ViewData["CurrentFilter"] as string)" /> @* name="SearchString" khớp với tham số Action *@
            <input type="submit" value="Search" class="btn btn-primary btn-sm" /> 
            @if (!String.IsNullOrEmpty(ViewData["CurrentFilter"] as string)) // Kiểm tra nếu có filter đang được áp dụng
            {
                @* Thẻ <text> để Razor hiểu đây là nội dung HTML cần render bên trong khối C# *@
                <text> | </text>
                <a asp-action="AvailableCourses">Clear Search</a> @* Chỉ hiển thị link này nếu có filter *@
            }
           
        </p>
    </div>
</form>

@* Hiển thị TempData Messages *@
@if (TempData["SuccessMessage"] != null)
{
     <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
     <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["WarningMessage"] != null)
{
     <div class="alert alert-warning">@TempData["WarningMessage"]</div>
}

@if (!Model.Any())
{
         <p>Không tìm thấy khóa học nào phù hợp.</p>
}
else
{
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4"> @* Sử dụng Grid của Bootstrap *@
        @foreach (var item in Model)
        {
            int currentRegistrations = registrationCounts.TryGetValue(item.course_id, out var count) ? count : 0;
            int? remainingSlots = item.max_capacity.HasValue ? item.max_capacity.Value - currentRegistrations : (int?)null;
            bool isFull = item.max_capacity.HasValue && remainingSlots.HasValue && remainingSlots.Value <= 0;
            bool isRegisteredByCurrentUser = registeredCourseIds.Contains(item.course_id);

            // --- Xác định style nền ---
            string backgroundStyle = !string.IsNullOrEmpty(item.ImageUrl)
                ? $"background-image: url('{System.Net.WebUtility.HtmlEncode(item.ImageUrl)}');" 
                : "background-color: #495057;";

                    <div class="col">
                        <div class="course-card h-100" style="@backgroundStyle"> @* Áp dụng style nền và class CSS *@

                            <div class="course-card-content"> @* Phần nội dung chữ *@
                                <h5 class="course-card-title">@item.course_name</h5>
                                <p class="course-card-text">GV: @(item.tutor ?? "N/A")</p>
                                <p class="course-card-text">Bắt đầu: @item.start_date?.ToString("dd/MM/yyyy")</p>
                                <p class="course-card-text">Học phí: @(item.fee.HasValue ? item.fee.Value.ToString("N0", CultureInfo.GetCultureInfo("vi-VN")) + " VNĐ" : "Miễn phí")</p>
                                <p class="course-card-text">
                            @if (isFull)
                            {
                                <span class="badge bg-danger">Hết chỗ</span>
                            }
                            else if (remainingSlots.HasValue)
                            {
                                <span class="badge bg-info">Còn @remainingSlots.Value chỗ</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Không giới hạn</span>
                            }
                                </p>
                            </div>

                            <div class="course-card-actions"> @* Phần chứa các nút thao tác *@
                                <a asp-action="CourseDetails" asp-route-id="@item.course_id" class="btn btn-sm btn-light">Chi tiết</a>

                        @if (isRegisteredByCurrentUser)
                        {
                                        <span class="badge bg-secondary ms-1">Đã đăng ký</span>
                        }
                        else if (User.Identity.IsAuthenticated && User.IsInRole("Student") && !isFull) // Chỉ hiển thị nút ĐK cho Student, đã login và còn chỗ
                        {
                                        <form asp-action="Register" method="post" style="display:inline;" class="ms-1">
                                @Html.AntiForgeryToken()
                                            <input type="hidden" name="courseId" value="@item.course_id" />
                                            <button type="submit" class="btn btn-sm btn-success">Đăng ký</button>
                                        </form>
                        }
                        else if (!User.Identity.IsAuthenticated && !isFull) // Chưa đăng nhập và còn chỗ
                        {
                                         <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("AvailableCourses", "InteractCourse", new { searchString = ViewData["CurrentFilter"] })" class="btn btn-sm btn-warning ms-1">Đăng ký học</a>
                        }
                        else if (isFull)
                        {
                                         <button type="button" class="btn btn-sm btn-secondary ms-1" disabled>Hết chỗ</button>
                        }
                            </div>

                        </div> @* End course-card *@
                    </div> @* End col *@
        }
        </div>
}