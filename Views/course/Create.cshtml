@model ManagementCenter.Models.course

@{
    ViewData["Title"] = "Create Course";
}



<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="tutor" class="control-label"></label>
                <input asp-for="tutor" class="form-control" />
                <span asp-validation-for="tutor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="course_name" class="control-label"></label>
                <input asp-for="course_name" class="form-control" />
                <span asp-validation-for="course_name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="start_date" class="control-label"></label>
                <input asp-for="start_date" class="form-control" />
                <span asp-validation-for="start_date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="fee" class="control-label"></label>
                <div class="input-group">
                    <input asp-for="fee" class="form-control" type="text" inputmode="numeric" id="feeInput" aria-describedby="fee-addon" /> @* Giữ nguyên các thuộc tính cần thiết *@
                    <span class="input-group-text" id="fee-addon">VNĐ</span>
                </div>
                <span asp-validation-for="fee" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="max_capacity" class="control-label"></label>
                <input asp-for="max_capacity" class="form-control" />
                <span asp-validation-for="max_capacity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="schedule" class="control-label"></label>
                <input asp-for="schedule" class="form-control" />
                <span asp-validation-for="schedule" class="text-danger"></span>
            </div>
             <div class="form-group">
                <label asp-for="ImageUrl" class="control-label"></label>
                <input asp-for="ImageUrl" class="form-control" placeholder="https://example.com/image.jpg"/>
                <span asp-validation-for="ImageUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function formatCurrencyInput(inputElement) {
            let originalValue = inputElement.value;
            let cursorPosition = inputElement.selectionStart;
            let originalLength = originalValue.length;

            let rawValue = originalValue.replace(/[^\d]/g, '');

            if (rawValue === '') {
                if (originalValue !== '') {
                    inputElement.value = '';
                }
                return;
            }

            try {
                let numberValue = parseInt(rawValue, 10);
                if (isNaN(numberValue)) {
                    numberValue = 0; // Hoặc xử lý lỗi khác
                }

                let formatter = new Intl.NumberFormat('vi-VN');
                let formattedValue = formatter.format(numberValue);

                if (inputElement.value !== formattedValue) {
                    inputElement.value = formattedValue;

                    try {
                       let newLength = formattedValue.length;
                       let newCursorPosition = cursorPosition + (newLength - originalLength);
                       newCursorPosition = Math.max(0, Math.min(newCursorPosition, newLength));
                       inputElement.setSelectionRange(newCursorPosition, newCursorPosition);
                    } catch (e) {
                        console.warn("Không thể đặt vị trí con trỏ.", e);
                    }
                }
            } catch (error) {
                console.error("Lỗi định dạng tiền tệ:", error);
            }
        }

        const feeInputElement = document.getElementById('feeInput');

        if (feeInputElement) {
            feeInputElement.addEventListener('input', function(event) {
                formatCurrencyInput(event.target);
            });

            window.addEventListener('load', function() {
                 formatCurrencyInput(feeInputElement);
            });
        }
    </script>
}
